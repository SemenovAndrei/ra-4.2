{"version":3,"sources":["components/TrainingDiaryForm/checkValid.js","components/TrainingDiaryForm/TrainingDiaryForm.jsx","components/TrainingDiaryListItem/TrainingDiaryListItem.jsx","components/TrainingDiaryList/TrainingDiaryList.jsx","components/TrainingDiary/TrainingDiary.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["checkValid","obj","value","field","document","querySelector","classList","style","borderColor","setTimeout","removeAttribute","TrainingDiaryForm","props","form","onChange","event","className","onSubmit","preventDefault","target","htmlFor","type","id","name","fieldDate","fieldLength","TrainingDiaryListItem","date","item","split","reverse","join","length","onClick","onEdit","nextSibling","dataset","data-id","onDelete","TrainingDiaryList","data","map","o","reduce","a","b","TrainingDiary","useState","setForm","setData","handleDelete","prev","filter","el","push","nanoid","sort","find","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f25fffc8.chunk.js","sourcesContent":["export function checkValid(obj) {\n  if (obj.value === '') {\n    const field = document.querySelector(`.${obj.classList.value}`)\n    field.style.borderColor = 'red'\n    setTimeout(() => field.removeAttribute('style'), 1000)\n    return true\n  }\n}\nexport default checkValid\n","import React from 'react'\nimport './TrainingDiaryForm.css'\nimport PropTypes from 'prop-types'\nimport checkValid from './checkValid'\n\nfunction TrainingDiaryForm(props) {\n  const form = props.form\n\n  const onChange = (event) => {\n    props.onChange(event)\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n\n    if (checkValid(event.target[0]) || checkValid(event.target[1])) {\n      return\n    }\n\n    return props.onSubmit(event.target[0].value, event.target[1].value)\n  }\n\n  return (\n    <form className=\"TrainingDiaryForm\" onSubmit={onSubmit}>\n      <label className=\"TrainingDiaryForm-labelDate\" htmlFor=\"fieldDate\">\n        Дата(ДД.ММ.ГГ)\n        <input\n          type=\"date\"\n          className=\"TrainingDiaryForm-fieldDate\"\n          id=\"fieldDate\"\n          name=\"fieldDate\"\n          value={form.fieldDate || form.name}\n          onChange={onChange}\n        />\n      </label>\n      <label className=\"TrainingDiaryForm-labelDate\" htmlFor=\"fieldLength\">\n        Пройдено км\n        <input\n          type=\"number\"\n          className=\"TrainingDiaryForm-fieldLength\"\n          id=\"fieldLength\"\n          name=\"fieldLength\"\n          value={form.fieldLength || form.name}\n          onChange={onChange}\n        />\n      </label>\n      <button className=\"TrainingDiaryForm-buttonAdd\">OK</button>\n    </form>\n  )\n}\n\nTrainingDiaryForm.propTypes = {\n  form: PropTypes.object.isRequired,\n}\n\nexport default TrainingDiaryForm\n","import React from 'react'\nimport './TrainingDiaryListItem.css'\nimport PropTypes from 'prop-types'\n\nfunction TrainingDiaryListItem(props) {\n  const date = props.item.date.split('-').reverse().join('.')\n\n  const onDelete = (event) => {\n    props.onDelete(event.target.dataset.id)\n  }\n\n  const onEdit = (event) => {\n    props.onEdit(event.target.nextSibling.dataset.id)\n  }\n\n  return (\n    <div className=\"TrainingDiaryListItem\">\n      <div className=\"TrainingDiaryList-data\">{date}</div>\n      <div className=\"TrainingDiaryList-length\">{props.item.length}</div>\n      <div className=\"TrainingDiaryList-controls\">\n        <button\n          className=\"TrainingDiaryList-controls-edit material-icons\"\n          onClick={onEdit}\n        >\n          mode\n        </button>\n        <button\n          data-id={props.item.id}\n          className=\"TrainingDiaryList-controls-delete material-icons\"\n          onClick={onDelete}\n        >\n          clear\n        </button>\n      </div>\n    </div>\n  )\n}\n\nTrainingDiaryListItem.propTypes = {\n  item: PropTypes.object.isRequired,\n}\n\nexport default TrainingDiaryListItem\n","import React from 'react'\nimport './TrainingDiaryList.css'\nimport PropTypes from 'prop-types'\nimport './TrainingDiaryList.css'\nimport TrainingDiaryListItem from '../TrainingDiaryListItem/TrainingDiaryListItem'\n\nfunction TrainingDiaryList(props) {\n  const onDelete = (id) => {\n    props.onDelete(id)\n  }\n\n  const onEdit = (id) => {\n    props.onEdit(id)\n  }\n\n  return (\n    <div className=\"TrainingDiaryList\">\n      <div className=\"TrainingDiaryList-titles\">\n        <div className=\"TrainingDiaryList-title\">Дата(ДД.ММ.ГГ)</div>\n        <div className=\"TrainingDiaryList-title\">Пройдено км</div>\n        <div className=\"TrainingDiaryList-title\">Действия</div>\n      </div>\n      <ul className=\"TrainingDiaryList-list\">\n        {props.data.map((o) => (\n          <li key={o.id} className=\"TrainingDiaryList-list-item\">\n            <TrainingDiaryListItem item={o} onDelete={onDelete} onEdit={onEdit} />\n          </li>\n        ))}\n      </ul>\n      <div className=\"TrainingDiaryList-total\">\n        {props.data.reduce((a, b) => a + +b.length, 0)}Km\n      </div>\n    </div>\n  )\n}\n\nTrainingDiaryList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default TrainingDiaryList\n","import React, { useState } from 'react'\nimport './TrainingDiary.css'\nimport PropTypes from 'prop-types'\nimport TrainingDiaryForm from '../TrainingDiaryForm/TrainingDiaryForm'\nimport TrainingDiaryList from '../TrainingDiaryList/TrainingDiaryList'\nimport { nanoid } from 'nanoid'\n\nfunction TrainingDiary(props) {\n  const [form, setForm] = useState({\n    name: '',\n    id: '',\n  })\n\n  const [data, setData] = useState(props.data)\n\n  const handleSubmit = (fieldDate, fieldLength) => {\n    data.push({ id: nanoid(), date: fieldDate, length: fieldLength })\n\n    setForm({\n      name: '',\n      id: '',\n    })\n  }\n\n  const handleChange = ({ target }) => {\n    setForm({ ...form, [target.name]: target.value })\n  }\n\n  const handleDelete = (id) => {\n    setData((prev) => prev.filter((el) => el.id !== id))\n  }\n\n  const handleEdit = (id) => {\n    if (form.fieldDate && form.fieldLength) {\n      data.push({ id: nanoid(), date: form.fieldDate, length: form.fieldLength })\n    }\n    const item = data.find((el) => el.id === id)\n    setForm({ ...form, fieldDate: item.date, fieldLength: item.length })\n    handleDelete(id)\n  }\n\n  return (\n    <div className=\"TrainingDiary\">\n      <div className=\"TrainingDiary-form\">\n        <TrainingDiaryForm form={form} onChange={handleChange} onSubmit={handleSubmit} />\n      </div>\n      <div className=\"TrainingDiary-list\">\n        <TrainingDiaryList\n          data={data.sort((a, b) => {\n            if (a.date > b.date) {\n              return -1\n            }\n            return 1\n          })}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n        />\n      </div>\n    </div>\n  )\n}\n\nTrainingDiary.defaultProps = {\n  data: [],\n}\n\nTrainingDiary.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default TrainingDiary\n","import { nanoid } from 'nanoid'\n\nexport const data = [\n  {\n    id: nanoid(),\n    date: '2021-02-12',\n    length: 123,\n  },\n  {\n    id: nanoid(),\n    date: '2021-12-03',\n    length: 1230,\n  },\n  {\n    id: nanoid(),\n    date: '2021-11-11',\n    length: 12,\n  },\n]\n\nexport default data\n","import './App.css'\nimport TrainingDiary from './components/TrainingDiary/TrainingDiary'\nimport data from './data'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TrainingDiary data={data} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}